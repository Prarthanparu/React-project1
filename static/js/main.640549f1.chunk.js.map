{"version":3,"sources":["firebase.js","Components/Header.js","features/appSlice.js","Components/SidebarOption.js","Components/Sidebar.js","Components/ChatInput.js","Components/Message.js","Components/Chat.js","img/P 1.png","Components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","onClick","signOut","alt","displayName","src","photoURL","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","actions","payload","selectRoomId","app","SidebarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContainer","channelName","prompt","collection","add","fonsize","style","padding","SidebarOptionChannel","h3","Sidebar","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","value","onChange","e","target","Button","hidden","type","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","MessageContainer","MessageInfo","Date","toDate","toUTCString","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","loading","useEffect","ChatContainer","ChatMessages","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","Image","signInWithPopup","catch","error","alert","App","AppLoading","AppLoadingContents","color","fadeIn","className","AppBody","path","exact","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.640549f1.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyD8WhB8J8Wu57FHchTrJzvKp56-M_gFkkw\",\n    authDomain: \"slack-clone-435e6.firebaseapp.com\",\n    projectId: \"slack-clone-435e6\",\n    storageBucket: \"slack-clone-435e6.appspot.com\",\n    messagingSenderId: \"643447977013\",\n    appId: \"1:643447977013:web:2562416ad04eb2db2bad7c\",\n    measurementId: \"G-XD6CWSQNL8\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider, db };","import React from 'react';\nimport styled from 'styled-components';\nimport  {Avatar} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport SearchIcon from '@material-ui/icons/Search';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport {useAuthState} from 'react-firebase-hooks/auth';\nimport { auth } from '../firebase';\n\nfunction Header() {\n    const [user] = useAuthState(auth);\n    return(\n         <HeaderContainer>\n         {/*Header Left */}\n            <HeaderLeft>\n                <HeaderAvatar\n                    onClick={()=>auth.signOut()}\n                    alt={user?.displayName}\n                    src={user?.photoURL}\n                />\n                <AccessTimeIcon/>\n            </HeaderLeft>\n\n            {/*Header Search */}\n            <HeaderSearch>\n                <SearchIcon/>\n                <input placeholder=\"Search Prarthan\" />\n            </HeaderSearch>\n\n            {/*Header Right */}\n            <HeaderRight>\n                <HelpOutlineIcon/>\n            </HeaderRight>\n\n        </HeaderContainer>\n    );\n}\n\nexport default Header;\n\nconst HeaderContainer = styled.div`\ndisplay:flex;\nposition:fixed;\nwidth:100%;\nalign-items:center;\njustify-content:space-between;\npadding:10px 0;\nbackground-color: var(--slack-color);\ncolor:white;\n`;\n\nconst HeaderLeft = styled.div`\nflex:0.3;\ndisplay:flex;\nalign-items:center;\nmargin-left:20px;\n\n>.MuiSvgIcon-root{\n    margin-left:auto;\n    margin-right:30px;\n}\n`;\n\nconst HeaderAvatar = styled(Avatar)`\ncursor:pointer;\n\n:hover{\n    opacity:0.8;\n}\n`;\n\nconst HeaderSearch = styled.div`\nflex:0.4;\nopacity:1;\nborder-radius:6px;\nbackground-color:#421f44;\ntext-align:center;\ndisplay:flex;\npadding:0 50px;\nborder: 1px gray solid;\n\n>input{\n    background-color:transparent;\n    border:none;\n    text-align:center;\n    min-width:30vw;\n    outline:none;\n    color: white;\n}\n\n`;\n\nconst HeaderRight = styled.div`\ndisplay:flex;\nflex:0.3;\nalign-items:flex-end;\n\n\n>.MuiSvgIcon-root{\n    margin-left:auto;\n    margin-right:20px;\n}\n\n`;\n ","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n    name: 'app',\r\n    initialState: {\r\n        roomId: null,\r\n    },\r\n    reducers: {\r\n        enterRoom: (state, actions) => {\r\n            state.roomId = actions.payload.roomId;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { enterRoom } = appSlice.actions;\r\n\r\nexport const selectRoomId = state => state.app.roomId;\r\n\r\nexport default appSlice.reducer;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport {db} from '../firebase';\nimport {enterRoom} from '../features/appSlice';\n\n\nfunction SidebarOption({Icon, title, addChannelOption, id}) {\n    const dispatch = useDispatch();\n\n    const addChannel = () => {\n        const channelName = prompt('Please Enter the Channel Name');\n        \n\n        if (channelName){\n            db.collection('rooms').add({\n                name: channelName,\n            });\n        }\n    };\n    const selectChannel = () => {\n        if (id) {\n            dispatch(enterRoom({\n                roomId: id,\n            })\n            );\n        }\n\n    };\n\n    return (\n        <SidebarOptionContainer\n        onClick={addChannelOption ? addChannel : selectChannel}\n        >\n\n            {Icon && <Icon fonsize=\"small\" style={{padding:10}}/>}\n            {Icon ? (\n                <h3>{title}</h3>\n                ): (\n                    <SidebarOptionChannel>\n                        <span>#</span>{title}\n                    </SidebarOptionChannel>\n                )}\n        </SidebarOptionContainer>\n        \n    );\n}\n\nexport default SidebarOption;\nconst SidebarOptionContainer = styled.div`\ndisplay:flex;\nfont-size:12px;\nalign-items:center;\npadding-left:2px;\ncursor:pointer;\n\n\n:hover {\n    opacity:0.9;\n    border-radius:020px;\n    background-color:#bc6ff1;\n}\n\n>h3{\n    font-weight:500;\n}\n\n>h3>span{\n    padding:15px;\n}\n\n`;\n\nconst SidebarOptionChannel = styled.h3`\npadding:10px 0;\nfont-weight:300;\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport CreateIcon from '@material-ui/icons/Create';\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport SidebarOption from './SidebarOption';\nimport {useCollection} from 'react-firebase-hooks/firestore';\nimport {db} from '../firebase';\nimport {useAuthState} from 'react-firebase-hooks/auth';\nimport { auth } from '../firebase';\n\n\nfunction Sidebar() {\n    const [user] = useAuthState(auth);\n    const [channels] = useCollection(db.collection(\"rooms\"));\n    return (\n        <SidebarContainer>\n            <SidebarHeader>\n                <SidebarInfo>\n                    <h2>{user.displayName}</h2>\n                    <h3>\n                        <FiberManualRecordIcon/>\n                        Prarthan Paru\n                    </h3>\n                </SidebarInfo>\n                <CreateIcon/>\n            </SidebarHeader>\n\n            <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\n            <SidebarOption Icon={InboxIcon} title=\"Mentions & Reactions\" />\n            <SidebarOption Icon={DraftsIcon} title=\"Saved Items\" />\n            <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel Browser\" />\n            <SidebarOption Icon={PeopleAltIcon} title=\"People & User groups\" />\n            <SidebarOption Icon={AppsIcon} title=\"Apps\" />\n            <SidebarOption Icon={FileCopyIcon} title=\"File Browser\" />\n            <SidebarOption Icon={ExpandLessIcon} title=\"Show Less\" />\n            <hr/>\n\n            <SidebarOption Icon={ExpandMoreIcon} title=\"Show More\" />\n            <hr/>\n            <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channel\" />\n\n            {channels?.docs.map((doc) => (\n                <SidebarOption \n                key={doc.id} \n                id={doc.id}  \n                title={doc.data().name}/>\n            ))}\n        </SidebarContainer>\n    );\n}\n\nexport default Sidebar;\n\nconst SidebarContainer = styled.div`\nbackground-color: var(--slack-color);\ncolor:white;\nflex:0.3;\nborder-top: 1px solid #49274b;\nmax-width: 260px;\nmargin-top:60px;\n\n\n>hr{\n    margin-top: 10px;\n    margin-bottom:10px;\n    border: 1px solid #49274b;\n}\n\n`;\n\nconst SidebarHeader = styled.div`\ndisplay:flex;\nborder-bottom:1px solid #49274b;\npadding:13px;\n\n>.MuiSvgIcon-root{\n    padding:8px;\n    color: #49274b;\n    font-size:18px;\n    background-color: white;\n    border-radius:999px;\n}\n\n`;\n\nconst SidebarInfo = styled.div`\nflex:1;\n\n>h2{\n    font-size: 15px;\n    font-weight: 900;\n    margin-bottom:5px;\n}\n\n>h3{\n    display:flex;\n    font-size:13px;\n    font-weight: 400;\n    align-items: center;\n}\n\n>h3 > .MuiSvgIcon-root{\n    font-size: 14px;\n    margin-top:1px;\n    margin-right:2px;\n    color: #fc8621;\n}\n\n`;\n\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {Button} from '@material-ui/core';\nimport { db } from '../firebase';\nimport firebase from 'firebase';\nimport {useAuthState} from 'react-firebase-hooks/auth';\nimport { auth } from '../firebase';\n\nfunction ChatInput({channelName, channelId, chatRef}) {\n    const [user] = useAuthState(auth);\n    const [input, setInput] = useState('');\n    \n\n    const sendMessage = (e) => {\n        e.preventDefault(); //preventes Refresh\n        \n        \n        if (!channelId) {\n            return false;\n        };\n\n        db.collection('rooms').doc(channelId).collection('messages').add({\n            message: input,\n            timestamp:firebase.firestore.FieldValue.serverTimestamp(),\n            user: user.displayName,\n            userImage:user.photoURL,\n        });\n\n        chatRef.current.scrollIntoView({\n            behavior:\"smooth\",\n        });\n\n        setInput(\"\");\n\n    };\n    return (\n        <ChatInputContainer>\n            <form>\n                <input value={input}\n                onChange={(e) => setInput(e.target.value)}\n                 placeholder={`Message # ${channelName}`}/>\n                <Button hidden type='submit' onClick={sendMessage}>\n                    SEND\n                </Button>\n            </form>\n        </ChatInputContainer>\n    )\n}\n\nexport default ChatInput;\n\nconst ChatInputContainer = styled.div `\nborder-radius:20px;\n\n>form{\n    position:relative;\n    display:flex;\n    justify-content: center;\n}\n\n> form > input {\n    position:fixed;\n    bottom:30px;\n    width:60%;\n    border: 2px solid #49274b;\n    border-radius:3px;\n    padding:20px;\n    outline:none;\n}\n\n>form> Button{\n    display: none !important;\n}\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nfunction Message({message,timestamp,user,userImage}) {\n    return (\n        <MessageContainer>\n            <img src={userImage} alt=\"\"/>\n            <MessageInfo>\n                <h4>\n                    {user}{' '}\n                    <span>\n                        {new Date(timestamp?.toDate()).toUTCString()}\n                    </span>\n                </h4>\n                <p>{message}</p>\n            </MessageInfo>\n        </MessageContainer>\n    )\n}\n\nexport default Message;\n\nconst MessageContainer = styled.div `\ndisplay:flex;\nalign-items:center;\npadding:20px;\n\n>img{\n    height:50px;\n    border-radius:8px;\n}\n\n\n`;\n\nconst MessageInfo = styled.div` \npadding-left:10px;\n\n>h4 > span{\n    color:#9d65c9;\n    font-weight:300;\n    margin-left:4px;\n    font-size:10px\n\n}\n`;","import styled from 'styled-components';\nimport React, {useRef} from 'react';\nimport StarBorderOutlinedIcon from '@material-ui/icons/StarBorderOutlined';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { useSelector } from 'react-redux';\nimport { selectRoomId } from '../features/appSlice';\nimport ChatInput from './ChatInput';\nimport { useCollection, useDocument } from 'react-firebase-hooks/firestore';\nimport { db } from '../firebase';\nimport Message from './Message';\nimport { useEffect } from 'react';\n\nfunction Chat() {\n    const chatRef = useRef(null);\n    const roomId = useSelector(selectRoomId);\n    const [roomDetails] = useDocument(\n        roomId && db.collection('rooms').doc(roomId)\n    );\n\n    const [roomMessages, loading] = useCollection(\n        roomId && db\n            .collection('rooms')\n            .doc(roomId)\n            .collection('messages')\n            .orderBy(\"timestamp\", \"asc\")\n    );\n\n    useEffect(() => {\n        chatRef?.current?.scrollIntoView({\n            behavior:\"smooth\",\n        });\n\n    }, [roomId, loading]);\n\n    return (\n        <ChatContainer >\n        {roomDetails && roomMessages && (\n           <>\n                <Header>\n                    <HeaderLeft>\n                        <h4>\n                            <strong>#{roomDetails?.data().name}</strong>\n                        </h4>\n                        <StarBorderOutlinedIcon />\n                    </HeaderLeft>\n                    <HeaderRight>\n                        <p>\n                            <InfoOutlinedIcon /> Details\n                    </p>\n                    </HeaderRight>\n                </Header>\n                <ChatMessages>\n                    {roomMessages?.docs.map((doc) => {\n                        const{message, timestamp, user, userImage} = doc.data();\n\n                        return(\n                            <Message\n                            key={doc.id}\n                            message={message}\n                            timestamp={timestamp}\n                            user={user}\n                            userImage = {userImage}\n                            />\n\n                        );\n                    })}\n                    <ChatBottom ref={chatRef}/>\n                </ChatMessages>\n\n                <ChatInput\n                    chatRef={chatRef}\n                    channelName={roomDetails?.data().name} \n                    channelId={roomId}\n                />\n            </>\n\n        ) }\n            \n        </ChatContainer>\n    );\n}\n\nexport default Chat;\n\nconst Header = styled.div`\ndisplay: flex;\njustify-content: space-between;\npadding:20px;\nborder-bottom: 1px solid gray;\n`;\n\nconst HeaderLeft = styled.div`\ndisplay: flex;\nalign-items:center;\n\n>h4{\n    display: flex;\n    text-transform: lowercase;\n    margin-right:10px;\n}\n\n>h4>.MuiSvgIcon-root{\n    margin-left:10px;\n    font-size: 18px;\n}\n\n`;\n\nconst HeaderRight = styled.div`\n>p{\n    display: flex;\n    align-items: center;\n    font-size: 14px;\n}\n\n>p >.MuiSvgIcon-root{\n    margin-right:5px  !important;\n    font-size: 16px;\n\n}\n\n`;\n\nconst ChatContainer = styled.div`\nflex: 0.7;\nflex-grow:1;\noverflow-y: scroll;\nmargin-top: 60px;\n`;\n\nconst ChatMessages = styled.div``;\n\nconst ChatBottom = styled.div `\npadding-bottom:200px;\n`;","export default __webpack_public_path__ + \"static/media/P 1.df76fca1.png\";","import styled from 'styled-components';\nimport React from 'react'; \nimport Image from '../img/P 1.png';\nimport {Button} from '@material-ui/core';\nimport { auth, provider } from '../firebase';\n\n\nfunction Login() {\n\n    const signIn = (e)=> {\n        e.preventDefault();\n        auth.signInWithPopup(provider).catch((error) =>\n        alert(error.message));\n    };\n\n    return (\n        <LoginContainer>\n            <LoginInnerContainer>\n                <img src={Image} alt=\"\"/>\n                <h1>Sign in to PARU</h1>\n                <p>paru.github.com</p>\n\n            <Button onClick={signIn}>\n                Sign in with Google!\n            </Button>\n\n            </LoginInnerContainer>\n        </LoginContainer>\n    )\n}\n\nexport default Login;\n\nconst LoginContainer = styled.div `\ndisplay:grid;\nbackground-image: linear-gradient(to top, #30cfd0 0%, #330867 100%);\nheight:100vh;\nplace-items:center;\n\n`;\n\nconst LoginInnerContainer = styled.div `\npadding:100px;\ntext-align:center;\nbackground-image: linear-gradient(to top, #9890e3 0%, #b1f4cf 100%);\nborder-radius:10px;\nbox-shadow:0 5px 9px rgba(0, 0, 0, 0.99), 0 1px 2px rgba(0, 0, 0, 0.24);\n\n\n\n>img {\n    object-fit: contain;\n    height: 100px;\n    margin-bottom:40px;\n}\n\n>button {\nmargin-top:50px;\ntext-transform:inherit !important;\nbackground-color: #6930c3 !important;\ncolor:white;\n}\n`;\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\nimport Header from './Components/Header';\r\nimport styled from 'styled-components';\r\nimport Sidebar from './Components/Sidebar';\r\nimport Chat from './Components/Chat';\r\nimport {useAuthState} from 'react-firebase-hooks/auth';\r\nimport { auth } from './firebase';\r\nimport Login from './Components/Login';\r\nimport Image from './img/P 1.png';\r\nimport Spinner from 'react-spinkit';\r\n\r\n\r\nfunction App() {\r\n\r\nconst [user,loading] = useAuthState(auth);\r\n\r\n  if (loading) {\r\n    return(\r\n      <AppLoading>\r\n        <AppLoadingContents>\r\n          <img src={Image} alt=\"\"/>\r\n\r\n          <Spinner \r\n            name=\"ball-spin-fade-loader\"\r\n            color=\"white\"\r\n            fadeIn=\"none\"\r\n          />\r\n\r\n        </AppLoadingContents>\r\n      </AppLoading>\r\n    )\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n     <Router>\r\n     {!user ? (\r\n       <Login/>\r\n     ): (\r\n        <>\r\n        <Header />\r\n        <AppBody>\r\n          <Sidebar/>\r\n            <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Chat/>\r\n            </Route>\r\n            </Switch>\r\n        </AppBody>\r\n      </>\r\n     )}\r\n      \r\n    </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppBody =styled.div`\r\ndisplay:flex;\r\nheight: 100vh;\r\n`;\r\n\r\nconst AppLoading = styled.div `\r\ndisplay:grid;\r\nplace-items:center;\r\nheight: 100vh;\r\nwidth: 100%;\r\nbackground-image: linear-gradient(to top, #30cfd0 0%, #330867 100%);\r\n\r\n`;\r\n\r\n\r\nconst AppLoadingContents = styled.div `\r\ntext-align: center;\r\npadding-bottom:100px;\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content: center;\r\nalign-items: center;\r\n\r\n>img {\r\n  padding: 20px;\r\n  height: 100px;\r\n  margin-bottom:40px;\r\n  \r\n}\r\n`;","import { configureStore } from '@reduxjs/toolkit';\r\nimport appReducer from '../features/appSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        app: appReducer,\r\n    },\r\n});","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}